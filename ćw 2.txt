2. CREATE DATABASE cw2;

3. CREATE EXTENSION postgis;

4. CREATE TABLE buildings (id int PRIMARY KEY, geometry geometry, name varchar);
   CREATE TABLE roads (id int PRIMARY KEY, geometry geometry, name varchar);
   CREATE TABLE poi (id int PRIMARY KEY, geometry geometry, name varchar);

5. INSERT INTO poi VALUES 
	(1, 'POINT(1 3.5)', 'G'), 
	(2, 'POINT(5.5 1.5)', 'H'),
	(3, 'POINT(9.5 6)', 'I'),
	(4, 'POINT(6.5 6)', 'J'),
	(5, 'POINT(6 9.5)', 'K');

   INSERT INTO roads VALUES 
	(1, 'LINESTRING(0 4.5, 12 4.5)', 'RoadX'), 
	(2, 'LINESTRING(7.5 0, 7.5 10.5)', 'RoadY');

   INSERT INTO buildings VALUES 
	(1, 'POLYGON((8 1.5, 10.5 1.5, 10.5 4, 8 4, 8 1.5))', 'BuildingA'),
	(2, 'POLYGON((4 5, 6 5, 6 7, 4 7, 4 5))', 'BuildingB'),
	(3, 'POLYGON((3 6, 5 6, 5 8, 3 8, 3 6))', 'BuildingC'),
	(4, 'POLYGON((9 8, 10 8, 10 9, 9 9, 9 8))', 'BuildingD'),
	(5, 'POLYGON((1 1, 2 1, 2 2, 1 2, 1 1))', 'BuildingF'); 

6. a) SELECT SUM(ST_Length(geometry)) 
	FROM roads;

   b) SELECT ST_AsText(geometry), ST_Area(geometry), ST_perimeter(geometry) 
	FROM buildings 
	WHERE name LIKE 'BuildingA';

   c) SELECT name, ST_Area(geometry) 
	FROM buildings
	ORDER BY name;

   d) SELECT name, ST_Perimeter(geometry)
	FROM buildings
	ORDER BY ST_Area(geometry) DESC
	LIMIT 2;

   e) SELECT ST_Distance(buildings.geometry, poi.geometry)
	FROM buildings
	CROSS JOIN poi
	WHERE buildings.name LIKE 'BuildingC'
	AND poi.name LIKE 'K';

   f) SELECT ST_Area(ST_Difference(buildingsC.geometry, ST_Buffer(buildingsB.geometry, 0.5)))
	FROM buildings AS buildingsC
	CROSS JOIN buildings AS buildingsB
	WHERE buildingsC.name LIKE 'BuildingC'
	AND buildingsB.name LIKE 'BuildingB';

   g) SELECT buildings.name 
	FROM buildings
	CROSS JOIN roads
	WHERE roads.name LIKE 'RoadX'
	AND ST_Centroid(buildings.geometry) |>> roads.geometry;

   h) SELECT ST_Area(ST_Difference(ST_Union(geometry, ST_GeomFromText('POLYGON((4 7, 6 7, 6 8, 4 8, 4 7))')), ST_Intersection(geometry, ST_GeomFromText('POLYGON((4 7, 6 7, 6 8, 4 8, 4 7))'))))
	FROM buildings
	WHERE name LIKE 'BuildingC';

